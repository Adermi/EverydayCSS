.frame {
  width: 100vw;
  height: 100vh;
  position: relative;
  background-color: #000;

  .center {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 300px;
    height: 300px;
    transform: translate(-50%, -50%);
    filter: contrast(100%);

    .ppp {
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);

      .ball {
        width: 90px;
        height: 90px;
        background: #fff;
        border-radius: 50%;
        filter: blur(4px);
      }

      each(range(1, 9), {
        .bubble-@{value} {
          position: absolute;
          top: 20px;
          left: 20px;
          width: 50px;
          height: 50px;
          @random: `Math.floor(Math.random() * 300)`;
          transform: rotate(e('@{random}deg'));

          @i: @value;
          &:after {
            position: absolute;
            display: block;
            content: '';
            width: 50px;
            height: 50px;
            background: #fff;
            border-radius: 50%;
            transform-origin: ((40 - @i * 3) + (40 - @i * 3) * 1px);
            animation: rotate ((2.5 + @i / 5) * 1s) ease-in-out ((@i / 5) * 1s) infinite;
            filter: blur(4px);

          }
        }
      });

      each(range(1, 11), {
        .sparkle-@{value} {
          position: absolute;
          top: 38px;
          left: 38px;
          width: (7px + @value);
          height: (7px + @value);
          @random: `Math.floor(Math.random() * 300)`;
          transform: rotate(e('@{random}deg'));


          &:after {
            position: absolute;
            display: block;
            content: '';
            width: (7px + @value);
            height: (7px + @value);
            background: #fff;
            border-radius: 50%;
            transform-origin: (60 - @value * 2) +  (60 - @value * 2) * 1px;
            animation: rotate (3.5 + @value / 5) *1s ease-in-out (@value / 5) * 1s infinite;
            filter: blur(4px);

          }
        }
      });
    }
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg) translate3d(0, 0, 0);
  }
  to {
    transform: rotate(360deg) translate3d(0, 0, 0);
  }
}
